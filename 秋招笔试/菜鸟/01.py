"""
@Author: yanzx
@Time: 2025/9/2 10:16 
@Description: 



小红和小紫正在玩一个游戏，每一关都有一个分数。如果某人某一关分数比上一关高，但另一个人这一关分数比上一关低，那么他就可以嘲笑对方。如果两个人这一关游戏的分数都比上一关多，则增量更多的可以嘲笑对方；如果两个人这一关游戏的分数都比上一关少，则减量更少的可以嘲笑对方。只有当他们的增量相同或者减量相同时，才不会互相嘲笑。

例如，假设小红第一关的分数为5，第二关的分数为12；小紫第一关的分数为2，第二关的分数为8，显然小红增加的比小紫多，那么小红就可以嘲笑小紫。

现在给定了小红和小紫每一关的分数，你可以选择一段连续的关卡，使得这一段关卡中两个人都不会互相嘲笑，问最多可以选择多少个关卡。特别的，一段连续关卡中的第一关两人不会互相嘲笑。输入描述

第一行输入一个正整数n，代表关卡数。

第二行输入n个整数a，代表小红每一关的分数。

第三行输入n个整数b，代表小紫每一关的分数。

2≤n≤10^5

-10^9 ≤ a_i, b_i ≤ 10^9

输出描述

输出可以选择最多的关卡数。



示例1

（左侧有绿色小箭头，右侧有“收起”按钮）

输入

5
1 2 3 1 3
-1 0 -3 -1 1


输出
2


"""


def solve_game(n, a, b):
    """
    解决小红和小紫的游戏问题
    
    题目规则：
    - 如果某人某一关分数比上一关高，但另一个人这一关分数比上一关低，那么他就可以嘲笑对方
    - 如果两个人这一关游戏的分数都比上一关多，则增量更多的可以嘲笑对方
    - 如果两个人这一关游戏的分数都比上一关少，则减量更少的可以嘲笑对方
    - 只有当他们的增量相同或者减量相同时，才不会互相嘲笑
    
    Args:
        n: 关卡数
        a: 小红每一关的分数列表
        b: 小紫每一关的分数列表
    
    Returns:
        最多可以选择的不互相嘲笑的连续关卡数
    """
    if n <= 1:
        return n
    # 计算每一关相对于上一关的分数差值
    diff_a = []
    diff_b = []
    for i in range(1, n):
        diff_a.append(a[i] - a[i-1])
        diff_b.append(b[i] - b[i-1])
    max_length = 1  # 第一关总是可以选择
    current_length = 1
    # 遍历每一关的差值（从第二关开始）
    for i in range(len(diff_a)):
        # 判断这一关是否会互相嘲笑
        can_mock = False
        
        # 如果小红和小紫的增量/减量不同，就会互相嘲笑
        if diff_a[i] != diff_b[i]:
            can_mock = True
        
        if can_mock:
            # 如果会互相嘲笑，重置当前长度（只能选择第一关）
            current_length = 1
        else:
            # 如果不会互相嘲笑，增加当前长度
            current_length += 1
            max_length = max(max_length, current_length)
    
    return max_length

# 读取输入
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

# 计算结果
result = solve_game(n, a, b)
print(result)


